
# nlb - 18082020
# 
#

version: "3.3"

services:
  ################################################
  ####        Traefik Proxy Setup           #####
  ###############################################
  traefikme:
    image: traefik:v2.3
    restart: always
    container_name: traefikme_ctn
    ports:
      - "80:80" # <== http
      - "8080:8080" # <== :8080 is where the dashboard runs on
      - "443:443" # <== https
    command:
    #### These are the CLI commands that will configure Traefik and tell it how to work! ####
      ## API Settings - https://docs.traefik.io/operations/api/, endpoints - https://docs.traefik.io/operations/api/#endpoints ##
      - --api.insecure=true # <== Enabling insecure api, NOT RECOMMENDED FOR PRODUCTION
      - --api.dashboard=true # <== Enabling the dashboard to view services, middlewares, routers, etc...
      - --api.debug=true # <== Enabling additional endpoints for debugging and profiling
      ## Log Settings (options: ERROR, DEBUG, PANIC, FATAL, WARN, INFO) - https://docs.traefik.io/observability/logs/ ##
      - --log.level=DEBUG # <== Setting the level of the logs from traefik
      ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
      - --providers.docker=true # <== Enabling docker as the provider for traefik
      - --providers.docker.exposedbydefault=false # <== Don't expose every container to traefik, only expose enabled ones
      - --providers.file.filename=/dynamic.yaml # <== Referring to a dynamic configuration file
      - --providers.docker.network=webnetwork # <== Operate on the docker network named web
      ## Entrypoints Settings - https://docs.traefik.io/routing/entrypoints/#configuration ##
      - --entrypoints.web.address=:80 # <== Defining an entrypoint for port :80 named web
      - --entrypoints.web-secured.address=:443 # <== Defining an entrypoint for https on port :443 named web-secured
      ## Certificate Settings (Let's Encrypt) -  https://docs.traefik.io/https/acme/#configuration-examples ##
      - --certificatesresolvers.mytlschallenge.acme.tlschallenge=true # <== Enable TLS-ALPN-01 to generate and renew ACME certs
      - --certificatesresolvers.mytlschallenge.acme.email=slowdownfaster@protonmail.com # <== Setting email for certs
      - --certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json # <== Defining acme file to store cert information
    volumes:
      - ./letsencrypt:/letsencrypt # <== Volume for certs (TLS)
      - /var/run/docker.sock:/var/run/docker.sock # <== Volume for docker admin
      - ./dynamic.yaml:/dynamic.yaml # <== Volume for dynamic conf file, **ref: line 27
    networks:
      - webnetwork # <== Placing traefik on the network named webnetwork, to access containers on this network
    labels:
    #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.api.rule=Host(`monitor.pause-notes.fr`)" # <== Setting the domain for the dashboard
      - "traefik.http.routers.api.service=api@internal" # <== Enabling the api to be a service to access

  ################################################
  ####         Site Setup Container         #####
  ##############################################
  wordpress: # <== we aren't going to open :80 here because traefik is going to serve this on entrypoint 'web'
  ## :80 is already exposed from within the container ##
    depends_on:
      - db
    image: wordpress:latest
    restart: always
    container_name: wp-traefikme-latest
    environment:
      WORDPRESS_DB_HOST: db:3306

      WORDPRESS_DB_NAME: wp_database
      WORDPRESS_DB_USER: guss 
      WORDPRESS_DB_PASSWORD: passwd
    volumes:
      - ./../sites/wordpress:/var/www/html
    networks:
      - webnetwork
      - backendnetwork
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.http.routers.wp-web.rule=Host(`test.pause-notes.fr`)" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.wp-web.entrypoints=web" # <== Defining the entrypoint for http, **ref: line 30
      - "traefik.http.routers.wp-web.middlewares=redirect@file" # <== This is a middleware to redirect to https
      - "traefik.http.routers.wp-secured.rule=Host(`test.pause-notes.fr`)" # <== Your Domain Name for the https rule 
      - "traefik.http.routers.wp-secured.entrypoints=web-secured" # <== Defining entrypoint for https, **ref: line 31
      - "traefik.http.routers.wp-secured.tls.certresolver=mytlschallenge" # <== Defining certsresolvers for https

 ################################################
 ####     DB Container not on traefik      #####
 ##############################################
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: wp_database
      MYSQL_USER: guss
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
    volumes:
      - db_data_02:/var/lib/mysql
 
    networks:
      - backendnetwork
      

#
# pause-notes.fr
# statique
#
  statique:
    image: php:7.4-apache
    container_name: site_statique 
    volumes:
      - ./../sites/statique:/var/www/html
    environment:
      - ALLOW_OVERRIDE=true

    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.http.routers.statique.rule=Host(`pause-notes.fr`)" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.statique.entrypoints=web" # <== Defining the entrypoint for http, **ref: line 30
      - "traefik.http.routers.statique.middlewares=redirect@file" # <== This is a middleware to redirect to https
      - "traefik.http.routers.statique-secured.rule=Host(`pause-notes.fr`)" # <== Your Domain Name for the https rule 
      - "traefik.http.routers.statique-secured.entrypoints=web-secured" # <== Defining entrypoint for https, **ref: line 31
      - "traefik.http.routers.statique-secured.tls.certresolver=mytlschallenge" # <== Defining certsresolvers for https

    networks:
      - webnetwork
    
  birding:
    image: php:7.4-apache
    container_name: cuicui
    volumes:
      - ./../sites/birding.pause-notes.fr:/var/www/html
    environment:
      - ALLOW_OVERRIDE=true

    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.http.routers.birding-web.rule=Host(`birding.pause-notes.fr`)" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.birding-web.entrypoints=web" # <== Defining the entrypoint for http, **ref: line 30
      - "traefik.http.routers.birding-web.middlewares=redirect@file" # <== This is a middleware to redirect to https
      - "traefik.http.routers.birding-secured.rule=Host(`birding.pause-notes.fr`)" # <== Your Domain Name for the https rule 
      - "traefik.http.routers.birding-secured.entrypoints=web-secured" # <== Defining entrypoint for https, **ref: line 31
      - "traefik.http.routers.birding-secured.tls.certresolver=mytlschallenge" # <== Defining certsresolvers for https
    networks:
      - webnetwork

# FIN DES SERVICES

# NETWORK
#
networks:
  webnetwork:
    external: true
  backendnetwork:
    external: false
    
    
# VOLUMES    
volumes:
  db_data_02: {}

